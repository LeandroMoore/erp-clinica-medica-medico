//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ERPMedicoModel", "AnamnesePaciente", "Anamnese", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ERP.Medico.Model.Anamnese), "Paciente", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ERP.Medico.Model.Paciente))]
[assembly: EdmRelationshipAttribute("ERPMedicoModel", "AnamneseTipoSangue", "Anamnese", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ERP.Medico.Model.Anamnese), "TipoSangue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ERP.Medico.Model.TipoSangue))]
[assembly: EdmRelationshipAttribute("ERPMedicoModel", "AtendimentoTipoAtendimento", "Atendimento", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ERP.Medico.Model.Atendimento), "TipoAtendimento", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ERP.Medico.Model.TipoAtendimento))]
[assembly: EdmRelationshipAttribute("ERPMedicoModel", "AtendimentoDiagnostico", "Atendimento", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ERP.Medico.Model.Atendimento), "Diagnostico", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ERP.Medico.Model.Diagnostico), true)]
[assembly: EdmRelationshipAttribute("ERPMedicoModel", "AtendimentoTratamento", "Atendimento", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ERP.Medico.Model.Atendimento), "Tratamento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ERP.Medico.Model.Tratamento), true)]
[assembly: EdmRelationshipAttribute("ERPMedicoModel", "AtendimentoPaciente", "Atendimento", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ERP.Medico.Model.Atendimento), "Paciente", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ERP.Medico.Model.Paciente))]
[assembly: EdmRelationshipAttribute("ERPMedicoModel", "AtendimentoMedico", "Atendimento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ERP.Medico.Model.Atendimento), "Medico", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ERP.Medico.Model.Medico))]

#endregion

namespace ERP.Medico.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ERPMedicoModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ERPMedicoModelContainer object using the connection string found in the 'ERPMedicoModelContainer' section of the application configuration file.
        /// </summary>
        public ERPMedicoModelContainer() : base("name=ERPMedicoModelContainer", "ERPMedicoModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ERPMedicoModelContainer object.
        /// </summary>
        public ERPMedicoModelContainer(string connectionString) : base(connectionString, "ERPMedicoModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ERPMedicoModelContainer object.
        /// </summary>
        public ERPMedicoModelContainer(EntityConnection connection) : base(connection, "ERPMedicoModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Paciente> Pacientes
        {
            get
            {
                if ((_Pacientes == null))
                {
                    _Pacientes = base.CreateObjectSet<Paciente>("Pacientes");
                }
                return _Pacientes;
            }
        }
        private ObjectSet<Paciente> _Pacientes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Medico> Medicos
        {
            get
            {
                if ((_Medicos == null))
                {
                    _Medicos = base.CreateObjectSet<Medico>("Medicos");
                }
                return _Medicos;
            }
        }
        private ObjectSet<Medico> _Medicos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Anamnese> Anamneses
        {
            get
            {
                if ((_Anamneses == null))
                {
                    _Anamneses = base.CreateObjectSet<Anamnese>("Anamneses");
                }
                return _Anamneses;
            }
        }
        private ObjectSet<Anamnese> _Anamneses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Atendimento> Atendimentos
        {
            get
            {
                if ((_Atendimentos == null))
                {
                    _Atendimentos = base.CreateObjectSet<Atendimento>("Atendimentos");
                }
                return _Atendimentos;
            }
        }
        private ObjectSet<Atendimento> _Atendimentos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tratamento> Tratamentos
        {
            get
            {
                if ((_Tratamentos == null))
                {
                    _Tratamentos = base.CreateObjectSet<Tratamento>("Tratamentos");
                }
                return _Tratamentos;
            }
        }
        private ObjectSet<Tratamento> _Tratamentos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Diagnostico> Diagnosticos
        {
            get
            {
                if ((_Diagnosticos == null))
                {
                    _Diagnosticos = base.CreateObjectSet<Diagnostico>("Diagnosticos");
                }
                return _Diagnosticos;
            }
        }
        private ObjectSet<Diagnostico> _Diagnosticos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TipoSangue> TiposSangue
        {
            get
            {
                if ((_TiposSangue == null))
                {
                    _TiposSangue = base.CreateObjectSet<TipoSangue>("TiposSangue");
                }
                return _TiposSangue;
            }
        }
        private ObjectSet<TipoSangue> _TiposSangue;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TipoAtendimento> TiposAtendimento
        {
            get
            {
                if ((_TiposAtendimento == null))
                {
                    _TiposAtendimento = base.CreateObjectSet<TipoAtendimento>("TiposAtendimento");
                }
                return _TiposAtendimento;
            }
        }
        private ObjectSet<TipoAtendimento> _TiposAtendimento;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pacientes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPacientes(Paciente paciente)
        {
            base.AddObject("Pacientes", paciente);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Medicos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicos(Medico medico)
        {
            base.AddObject("Medicos", medico);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Anamneses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAnamneses(Anamnese anamnese)
        {
            base.AddObject("Anamneses", anamnese);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Atendimentos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAtendimentos(Atendimento atendimento)
        {
            base.AddObject("Atendimentos", atendimento);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tratamentos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTratamentos(Tratamento tratamento)
        {
            base.AddObject("Tratamentos", tratamento);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Diagnosticos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDiagnosticos(Diagnostico diagnostico)
        {
            base.AddObject("Diagnosticos", diagnostico);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TiposSangue EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTiposSangue(TipoSangue tipoSangue)
        {
            base.AddObject("TiposSangue", tipoSangue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TiposAtendimento EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTiposAtendimento(TipoAtendimento tipoAtendimento)
        {
            base.AddObject("TiposAtendimento", tipoAtendimento);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPMedicoModel", Name="Anamnese")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Anamnese : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Anamnese object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="descricaoDoencaAtual">Initial value of the DescricaoDoencaAtual property.</param>
        /// <param name="descricaoMedicaPregressa">Initial value of the DescricaoMedicaPregressa property.</param>
        /// <param name="historicoFamiliar">Initial value of the HistoricoFamiliar property.</param>
        /// <param name="historicoPessoalSocial">Initial value of the HistoricoPessoalSocial property.</param>
        /// <param name="observacoes">Initial value of the Observacoes property.</param>
        /// <param name="queixaPrincipal">Initial value of the QueixaPrincipal property.</param>
        public static Anamnese CreateAnamnese(global::System.Int32 id, global::System.String descricaoDoencaAtual, global::System.String descricaoMedicaPregressa, global::System.String historicoFamiliar, global::System.String historicoPessoalSocial, global::System.String observacoes, global::System.String queixaPrincipal)
        {
            Anamnese anamnese = new Anamnese();
            anamnese.Id = id;
            anamnese.DescricaoDoencaAtual = descricaoDoencaAtual;
            anamnese.DescricaoMedicaPregressa = descricaoMedicaPregressa;
            anamnese.HistoricoFamiliar = historicoFamiliar;
            anamnese.HistoricoPessoalSocial = historicoPessoalSocial;
            anamnese.Observacoes = observacoes;
            anamnese.QueixaPrincipal = queixaPrincipal;
            return anamnese;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DescricaoDoencaAtual
        {
            get
            {
                return _DescricaoDoencaAtual;
            }
            set
            {
                OnDescricaoDoencaAtualChanging(value);
                ReportPropertyChanging("DescricaoDoencaAtual");
                _DescricaoDoencaAtual = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DescricaoDoencaAtual");
                OnDescricaoDoencaAtualChanged();
            }
        }
        private global::System.String _DescricaoDoencaAtual;
        partial void OnDescricaoDoencaAtualChanging(global::System.String value);
        partial void OnDescricaoDoencaAtualChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DescricaoMedicaPregressa
        {
            get
            {
                return _DescricaoMedicaPregressa;
            }
            set
            {
                OnDescricaoMedicaPregressaChanging(value);
                ReportPropertyChanging("DescricaoMedicaPregressa");
                _DescricaoMedicaPregressa = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DescricaoMedicaPregressa");
                OnDescricaoMedicaPregressaChanged();
            }
        }
        private global::System.String _DescricaoMedicaPregressa;
        partial void OnDescricaoMedicaPregressaChanging(global::System.String value);
        partial void OnDescricaoMedicaPregressaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HistoricoFamiliar
        {
            get
            {
                return _HistoricoFamiliar;
            }
            set
            {
                OnHistoricoFamiliarChanging(value);
                ReportPropertyChanging("HistoricoFamiliar");
                _HistoricoFamiliar = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HistoricoFamiliar");
                OnHistoricoFamiliarChanged();
            }
        }
        private global::System.String _HistoricoFamiliar;
        partial void OnHistoricoFamiliarChanging(global::System.String value);
        partial void OnHistoricoFamiliarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HistoricoPessoalSocial
        {
            get
            {
                return _HistoricoPessoalSocial;
            }
            set
            {
                OnHistoricoPessoalSocialChanging(value);
                ReportPropertyChanging("HistoricoPessoalSocial");
                _HistoricoPessoalSocial = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HistoricoPessoalSocial");
                OnHistoricoPessoalSocialChanged();
            }
        }
        private global::System.String _HistoricoPessoalSocial;
        partial void OnHistoricoPessoalSocialChanging(global::System.String value);
        partial void OnHistoricoPessoalSocialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Observacoes
        {
            get
            {
                return _Observacoes;
            }
            set
            {
                OnObservacoesChanging(value);
                ReportPropertyChanging("Observacoes");
                _Observacoes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Observacoes");
                OnObservacoesChanged();
            }
        }
        private global::System.String _Observacoes;
        partial void OnObservacoesChanging(global::System.String value);
        partial void OnObservacoesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QueixaPrincipal
        {
            get
            {
                return _QueixaPrincipal;
            }
            set
            {
                OnQueixaPrincipalChanging(value);
                ReportPropertyChanging("QueixaPrincipal");
                _QueixaPrincipal = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("QueixaPrincipal");
                OnQueixaPrincipalChanged();
            }
        }
        private global::System.String _QueixaPrincipal;
        partial void OnQueixaPrincipalChanging(global::System.String value);
        partial void OnQueixaPrincipalChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPMedicoModel", "AnamnesePaciente", "Paciente")]
        public Paciente Paciente
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("ERPMedicoModel.AnamnesePaciente", "Paciente").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("ERPMedicoModel.AnamnesePaciente", "Paciente").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Paciente> PacienteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("ERPMedicoModel.AnamnesePaciente", "Paciente");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Paciente>("ERPMedicoModel.AnamnesePaciente", "Paciente", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPMedicoModel", "AnamneseTipoSangue", "TipoSangue")]
        public TipoSangue TipoSangue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TipoSangue>("ERPMedicoModel.AnamneseTipoSangue", "TipoSangue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TipoSangue>("ERPMedicoModel.AnamneseTipoSangue", "TipoSangue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TipoSangue> TipoSangueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TipoSangue>("ERPMedicoModel.AnamneseTipoSangue", "TipoSangue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TipoSangue>("ERPMedicoModel.AnamneseTipoSangue", "TipoSangue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPMedicoModel", Name="Atendimento")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Atendimento : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Atendimento object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="descricao">Initial value of the Descricao property.</param>
        /// <param name="emergencia">Initial value of the Emergencia property.</param>
        /// <param name="horario">Initial value of the Horario property.</param>
        public static Atendimento CreateAtendimento(global::System.Int32 id, global::System.String descricao, global::System.Boolean emergencia, global::System.DateTime horario)
        {
            Atendimento atendimento = new Atendimento();
            atendimento.Id = id;
            atendimento.Descricao = descricao;
            atendimento.Emergencia = emergencia;
            atendimento.Horario = horario;
            return atendimento;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Descricao
        {
            get
            {
                return _Descricao;
            }
            set
            {
                OnDescricaoChanging(value);
                ReportPropertyChanging("Descricao");
                _Descricao = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Descricao");
                OnDescricaoChanged();
            }
        }
        private global::System.String _Descricao;
        partial void OnDescricaoChanging(global::System.String value);
        partial void OnDescricaoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Emergencia
        {
            get
            {
                return _Emergencia;
            }
            set
            {
                OnEmergenciaChanging(value);
                ReportPropertyChanging("Emergencia");
                _Emergencia = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Emergencia");
                OnEmergenciaChanged();
            }
        }
        private global::System.Boolean _Emergencia;
        partial void OnEmergenciaChanging(global::System.Boolean value);
        partial void OnEmergenciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Horario
        {
            get
            {
                return _Horario;
            }
            set
            {
                OnHorarioChanging(value);
                ReportPropertyChanging("Horario");
                _Horario = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Horario");
                OnHorarioChanged();
            }
        }
        private global::System.DateTime _Horario;
        partial void OnHorarioChanging(global::System.DateTime value);
        partial void OnHorarioChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPMedicoModel", "AtendimentoTipoAtendimento", "TipoAtendimento")]
        public TipoAtendimento TipoAtendimento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TipoAtendimento>("ERPMedicoModel.AtendimentoTipoAtendimento", "TipoAtendimento").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TipoAtendimento>("ERPMedicoModel.AtendimentoTipoAtendimento", "TipoAtendimento").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TipoAtendimento> TipoAtendimentoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TipoAtendimento>("ERPMedicoModel.AtendimentoTipoAtendimento", "TipoAtendimento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TipoAtendimento>("ERPMedicoModel.AtendimentoTipoAtendimento", "TipoAtendimento", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPMedicoModel", "AtendimentoDiagnostico", "Diagnostico")]
        public EntityCollection<Diagnostico> Diagnosticos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Diagnostico>("ERPMedicoModel.AtendimentoDiagnostico", "Diagnostico");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Diagnostico>("ERPMedicoModel.AtendimentoDiagnostico", "Diagnostico", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPMedicoModel", "AtendimentoTratamento", "Tratamento")]
        public EntityCollection<Tratamento> Tratamentos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tratamento>("ERPMedicoModel.AtendimentoTratamento", "Tratamento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tratamento>("ERPMedicoModel.AtendimentoTratamento", "Tratamento", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPMedicoModel", "AtendimentoPaciente", "Paciente")]
        public Paciente Paciente
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("ERPMedicoModel.AtendimentoPaciente", "Paciente").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("ERPMedicoModel.AtendimentoPaciente", "Paciente").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Paciente> PacienteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("ERPMedicoModel.AtendimentoPaciente", "Paciente");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Paciente>("ERPMedicoModel.AtendimentoPaciente", "Paciente", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPMedicoModel", "AtendimentoMedico", "Medico")]
        public Medico Medico
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("ERPMedicoModel.AtendimentoMedico", "Medico").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("ERPMedicoModel.AtendimentoMedico", "Medico").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Medico> MedicoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("ERPMedicoModel.AtendimentoMedico", "Medico");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Medico>("ERPMedicoModel.AtendimentoMedico", "Medico", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPMedicoModel", Name="Diagnostico")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Diagnostico : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Diagnostico object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="descricao">Initial value of the Descricao property.</param>
        /// <param name="observacoes">Initial value of the Observacoes property.</param>
        /// <param name="atendimentoId">Initial value of the AtendimentoId property.</param>
        public static Diagnostico CreateDiagnostico(global::System.Int32 id, global::System.String descricao, global::System.String observacoes, global::System.Int32 atendimentoId)
        {
            Diagnostico diagnostico = new Diagnostico();
            diagnostico.Id = id;
            diagnostico.Descricao = descricao;
            diagnostico.Observacoes = observacoes;
            diagnostico.AtendimentoId = atendimentoId;
            return diagnostico;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Descricao
        {
            get
            {
                return _Descricao;
            }
            set
            {
                OnDescricaoChanging(value);
                ReportPropertyChanging("Descricao");
                _Descricao = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Descricao");
                OnDescricaoChanged();
            }
        }
        private global::System.String _Descricao;
        partial void OnDescricaoChanging(global::System.String value);
        partial void OnDescricaoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Observacoes
        {
            get
            {
                return _Observacoes;
            }
            set
            {
                OnObservacoesChanging(value);
                ReportPropertyChanging("Observacoes");
                _Observacoes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Observacoes");
                OnObservacoesChanged();
            }
        }
        private global::System.String _Observacoes;
        partial void OnObservacoesChanging(global::System.String value);
        partial void OnObservacoesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AtendimentoId
        {
            get
            {
                return _AtendimentoId;
            }
            set
            {
                OnAtendimentoIdChanging(value);
                ReportPropertyChanging("AtendimentoId");
                _AtendimentoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AtendimentoId");
                OnAtendimentoIdChanged();
            }
        }
        private global::System.Int32 _AtendimentoId;
        partial void OnAtendimentoIdChanging(global::System.Int32 value);
        partial void OnAtendimentoIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPMedicoModel", "AtendimentoDiagnostico", "Atendimento")]
        public Atendimento Atendimento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERPMedicoModel.AtendimentoDiagnostico", "Atendimento").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERPMedicoModel.AtendimentoDiagnostico", "Atendimento").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Atendimento> AtendimentoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERPMedicoModel.AtendimentoDiagnostico", "Atendimento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Atendimento>("ERPMedicoModel.AtendimentoDiagnostico", "Atendimento", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPMedicoModel", Name="Medico")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Medico : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Medico object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nome">Initial value of the Nome property.</param>
        public static Medico CreateMedico(global::System.Int32 id, global::System.String nome)
        {
            Medico medico = new Medico();
            medico.Id = id;
            medico.Nome = nome;
            return medico;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nome
        {
            get
            {
                return _Nome;
            }
            set
            {
                OnNomeChanging(value);
                ReportPropertyChanging("Nome");
                _Nome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nome");
                OnNomeChanged();
            }
        }
        private global::System.String _Nome;
        partial void OnNomeChanging(global::System.String value);
        partial void OnNomeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPMedicoModel", "AtendimentoMedico", "Atendimento")]
        public EntityCollection<Atendimento> Atendimentos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Atendimento>("ERPMedicoModel.AtendimentoMedico", "Atendimento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Atendimento>("ERPMedicoModel.AtendimentoMedico", "Atendimento", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPMedicoModel", Name="Paciente")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Paciente : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Paciente object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="altura">Initial value of the Altura property.</param>
        /// <param name="peso">Initial value of the Peso property.</param>
        /// <param name="codigo">Initial value of the Codigo property.</param>
        public static Paciente CreatePaciente(global::System.Int32 id, global::System.Single altura, global::System.Single peso, global::System.String codigo)
        {
            Paciente paciente = new Paciente();
            paciente.Id = id;
            paciente.Altura = altura;
            paciente.Peso = peso;
            paciente.Codigo = codigo;
            return paciente;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Altura
        {
            get
            {
                return _Altura;
            }
            set
            {
                OnAlturaChanging(value);
                ReportPropertyChanging("Altura");
                _Altura = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Altura");
                OnAlturaChanged();
            }
        }
        private global::System.Single _Altura;
        partial void OnAlturaChanging(global::System.Single value);
        partial void OnAlturaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Peso
        {
            get
            {
                return _Peso;
            }
            set
            {
                OnPesoChanging(value);
                ReportPropertyChanging("Peso");
                _Peso = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Peso");
                OnPesoChanged();
            }
        }
        private global::System.Single _Peso;
        partial void OnPesoChanging(global::System.Single value);
        partial void OnPesoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Codigo
        {
            get
            {
                return _Codigo;
            }
            set
            {
                OnCodigoChanging(value);
                ReportPropertyChanging("Codigo");
                _Codigo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Codigo");
                OnCodigoChanged();
            }
        }
        private global::System.String _Codigo;
        partial void OnCodigoChanging(global::System.String value);
        partial void OnCodigoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPMedicoModel", "AnamnesePaciente", "Anamnese")]
        public Anamnese Anamnese
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Anamnese>("ERPMedicoModel.AnamnesePaciente", "Anamnese").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Anamnese>("ERPMedicoModel.AnamnesePaciente", "Anamnese").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Anamnese> AnamneseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Anamnese>("ERPMedicoModel.AnamnesePaciente", "Anamnese");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Anamnese>("ERPMedicoModel.AnamnesePaciente", "Anamnese", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPMedicoModel", "AtendimentoPaciente", "Atendimento")]
        public Atendimento Atendimento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERPMedicoModel.AtendimentoPaciente", "Atendimento").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERPMedicoModel.AtendimentoPaciente", "Atendimento").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Atendimento> AtendimentoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERPMedicoModel.AtendimentoPaciente", "Atendimento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Atendimento>("ERPMedicoModel.AtendimentoPaciente", "Atendimento", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPMedicoModel", Name="TipoAtendimento")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TipoAtendimento : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TipoAtendimento object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="descricao">Initial value of the Descricao property.</param>
        public static TipoAtendimento CreateTipoAtendimento(global::System.Int32 id, global::System.String descricao)
        {
            TipoAtendimento tipoAtendimento = new TipoAtendimento();
            tipoAtendimento.Id = id;
            tipoAtendimento.Descricao = descricao;
            return tipoAtendimento;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Descricao
        {
            get
            {
                return _Descricao;
            }
            set
            {
                OnDescricaoChanging(value);
                ReportPropertyChanging("Descricao");
                _Descricao = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Descricao");
                OnDescricaoChanged();
            }
        }
        private global::System.String _Descricao;
        partial void OnDescricaoChanging(global::System.String value);
        partial void OnDescricaoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPMedicoModel", "AtendimentoTipoAtendimento", "Atendimento")]
        public Atendimento Atendimento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERPMedicoModel.AtendimentoTipoAtendimento", "Atendimento").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERPMedicoModel.AtendimentoTipoAtendimento", "Atendimento").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Atendimento> AtendimentoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERPMedicoModel.AtendimentoTipoAtendimento", "Atendimento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Atendimento>("ERPMedicoModel.AtendimentoTipoAtendimento", "Atendimento", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPMedicoModel", Name="TipoSangue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TipoSangue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TipoSangue object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="descricao">Initial value of the Descricao property.</param>
        public static TipoSangue CreateTipoSangue(global::System.Int32 id, global::System.String descricao)
        {
            TipoSangue tipoSangue = new TipoSangue();
            tipoSangue.Id = id;
            tipoSangue.Descricao = descricao;
            return tipoSangue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Descricao
        {
            get
            {
                return _Descricao;
            }
            set
            {
                OnDescricaoChanging(value);
                ReportPropertyChanging("Descricao");
                _Descricao = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Descricao");
                OnDescricaoChanged();
            }
        }
        private global::System.String _Descricao;
        partial void OnDescricaoChanging(global::System.String value);
        partial void OnDescricaoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPMedicoModel", "AnamneseTipoSangue", "Anamnese")]
        public Anamnese Anamnese
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Anamnese>("ERPMedicoModel.AnamneseTipoSangue", "Anamnese").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Anamnese>("ERPMedicoModel.AnamneseTipoSangue", "Anamnese").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Anamnese> AnamneseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Anamnese>("ERPMedicoModel.AnamneseTipoSangue", "Anamnese");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Anamnese>("ERPMedicoModel.AnamneseTipoSangue", "Anamnese", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPMedicoModel", Name="Tratamento")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tratamento : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tratamento object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="descricao">Initial value of the Descricao property.</param>
        /// <param name="observacoes">Initial value of the Observacoes property.</param>
        /// <param name="atendimentoId">Initial value of the AtendimentoId property.</param>
        public static Tratamento CreateTratamento(global::System.Int32 id, global::System.String descricao, global::System.String observacoes, global::System.Int32 atendimentoId)
        {
            Tratamento tratamento = new Tratamento();
            tratamento.Id = id;
            tratamento.Descricao = descricao;
            tratamento.Observacoes = observacoes;
            tratamento.AtendimentoId = atendimentoId;
            return tratamento;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Descricao
        {
            get
            {
                return _Descricao;
            }
            set
            {
                OnDescricaoChanging(value);
                ReportPropertyChanging("Descricao");
                _Descricao = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Descricao");
                OnDescricaoChanged();
            }
        }
        private global::System.String _Descricao;
        partial void OnDescricaoChanging(global::System.String value);
        partial void OnDescricaoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Observacoes
        {
            get
            {
                return _Observacoes;
            }
            set
            {
                OnObservacoesChanging(value);
                ReportPropertyChanging("Observacoes");
                _Observacoes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Observacoes");
                OnObservacoesChanged();
            }
        }
        private global::System.String _Observacoes;
        partial void OnObservacoesChanging(global::System.String value);
        partial void OnObservacoesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AtendimentoId
        {
            get
            {
                return _AtendimentoId;
            }
            set
            {
                OnAtendimentoIdChanging(value);
                ReportPropertyChanging("AtendimentoId");
                _AtendimentoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AtendimentoId");
                OnAtendimentoIdChanged();
            }
        }
        private global::System.Int32 _AtendimentoId;
        partial void OnAtendimentoIdChanging(global::System.Int32 value);
        partial void OnAtendimentoIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPMedicoModel", "AtendimentoTratamento", "Atendimento")]
        public Atendimento Atendimento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERPMedicoModel.AtendimentoTratamento", "Atendimento").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERPMedicoModel.AtendimentoTratamento", "Atendimento").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Atendimento> AtendimentoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERPMedicoModel.AtendimentoTratamento", "Atendimento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Atendimento>("ERPMedicoModel.AtendimentoTratamento", "Atendimento", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
