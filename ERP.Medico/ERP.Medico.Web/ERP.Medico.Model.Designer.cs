//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ERP.Medico.Model", "FK_Atendimento_Medico", "Medico", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ERP.Medico.Web.Medico), "Atendimento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ERP.Medico.Web.Atendimento), true)]
[assembly: EdmRelationshipAttribute("ERP.Medico.Model", "FK_Atendimento_Paciente", "Paciente", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ERP.Medico.Web.Paciente), "Atendimento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ERP.Medico.Web.Atendimento), true)]
[assembly: EdmRelationshipAttribute("ERP.Medico.Model", "FK_Diagnostico_Atendimento", "Atendimento", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ERP.Medico.Web.Atendimento), "Diagnostico", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ERP.Medico.Web.Diagnostico), true)]
[assembly: EdmRelationshipAttribute("ERP.Medico.Model", "FK_Exame_Atendimento", "Atendimento", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ERP.Medico.Web.Atendimento), "Exame", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ERP.Medico.Web.Exame), true)]
[assembly: EdmRelationshipAttribute("ERP.Medico.Model", "FK_Prescricao_Atendimento", "Atendimento", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ERP.Medico.Web.Atendimento), "Prescricao", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ERP.Medico.Web.Prescricao), true)]
[assembly: EdmRelationshipAttribute("ERP.Medico.Model", "FK_Tratamento_Atendimento", "Atendimento", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ERP.Medico.Web.Atendimento), "Tratamento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ERP.Medico.Web.Tratamento), true)]

#endregion

namespace ERP.Medico.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Atendimento> Atendimento
        {
            get
            {
                if ((_Atendimento == null))
                {
                    _Atendimento = base.CreateObjectSet<Atendimento>("Atendimento");
                }
                return _Atendimento;
            }
        }
        private ObjectSet<Atendimento> _Atendimento;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Diagnostico> Diagnostico
        {
            get
            {
                if ((_Diagnostico == null))
                {
                    _Diagnostico = base.CreateObjectSet<Diagnostico>("Diagnostico");
                }
                return _Diagnostico;
            }
        }
        private ObjectSet<Diagnostico> _Diagnostico;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Exame> Exame
        {
            get
            {
                if ((_Exame == null))
                {
                    _Exame = base.CreateObjectSet<Exame>("Exame");
                }
                return _Exame;
            }
        }
        private ObjectSet<Exame> _Exame;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Medico> Medico
        {
            get
            {
                if ((_Medico == null))
                {
                    _Medico = base.CreateObjectSet<Medico>("Medico");
                }
                return _Medico;
            }
        }
        private ObjectSet<Medico> _Medico;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Paciente> Paciente
        {
            get
            {
                if ((_Paciente == null))
                {
                    _Paciente = base.CreateObjectSet<Paciente>("Paciente");
                }
                return _Paciente;
            }
        }
        private ObjectSet<Paciente> _Paciente;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Prescricao> Prescricao
        {
            get
            {
                if ((_Prescricao == null))
                {
                    _Prescricao = base.CreateObjectSet<Prescricao>("Prescricao");
                }
                return _Prescricao;
            }
        }
        private ObjectSet<Prescricao> _Prescricao;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tratamento> Tratamento
        {
            get
            {
                if ((_Tratamento == null))
                {
                    _Tratamento = base.CreateObjectSet<Tratamento>("Tratamento");
                }
                return _Tratamento;
            }
        }
        private ObjectSet<Tratamento> _Tratamento;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Atendimento EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAtendimento(Atendimento atendimento)
        {
            base.AddObject("Atendimento", atendimento);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Diagnostico EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDiagnostico(Diagnostico diagnostico)
        {
            base.AddObject("Diagnostico", diagnostico);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Exame EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExame(Exame exame)
        {
            base.AddObject("Exame", exame);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Medico EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedico(Medico medico)
        {
            base.AddObject("Medico", medico);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Paciente EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaciente(Paciente paciente)
        {
            base.AddObject("Paciente", paciente);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Prescricao EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrescricao(Prescricao prescricao)
        {
            base.AddObject("Prescricao", prescricao);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tratamento EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTratamento(Tratamento tratamento)
        {
            base.AddObject("Tratamento", tratamento);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERP.Medico.Model", Name="Atendimento")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Atendimento : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Atendimento object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="pacienteId">Initial value of the PacienteId property.</param>
        /// <param name="horario">Initial value of the Horario property.</param>
        public static Atendimento CreateAtendimento(global::System.Int32 id, global::System.Int32 pacienteId, global::System.DateTime horario)
        {
            Atendimento atendimento = new Atendimento();
            atendimento.Id = id;
            atendimento.PacienteId = pacienteId;
            atendimento.Horario = horario;
            return atendimento;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PacienteId
        {
            get
            {
                return _PacienteId;
            }
            set
            {
                OnPacienteIdChanging(value);
                ReportPropertyChanging("PacienteId");
                _PacienteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PacienteId");
                OnPacienteIdChanged();
            }
        }
        private global::System.Int32 _PacienteId;
        partial void OnPacienteIdChanging(global::System.Int32 value);
        partial void OnPacienteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Peso
        {
            get
            {
                return _Peso;
            }
            set
            {
                OnPesoChanging(value);
                ReportPropertyChanging("Peso");
                _Peso = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Peso");
                OnPesoChanged();
            }
        }
        private Nullable<global::System.Double> _Peso;
        partial void OnPesoChanging(Nullable<global::System.Double> value);
        partial void OnPesoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Altura
        {
            get
            {
                return _Altura;
            }
            set
            {
                OnAlturaChanging(value);
                ReportPropertyChanging("Altura");
                _Altura = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Altura");
                OnAlturaChanged();
            }
        }
        private Nullable<global::System.Double> _Altura;
        partial void OnAlturaChanging(Nullable<global::System.Double> value);
        partial void OnAlturaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descricao
        {
            get
            {
                return _Descricao;
            }
            set
            {
                OnDescricaoChanging(value);
                ReportPropertyChanging("Descricao");
                _Descricao = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descricao");
                OnDescricaoChanged();
            }
        }
        private global::System.String _Descricao;
        partial void OnDescricaoChanging(global::System.String value);
        partial void OnDescricaoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Horario
        {
            get
            {
                return _Horario;
            }
            set
            {
                OnHorarioChanging(value);
                ReportPropertyChanging("Horario");
                _Horario = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Horario");
                OnHorarioChanged();
            }
        }
        private global::System.DateTime _Horario;
        partial void OnHorarioChanging(global::System.DateTime value);
        partial void OnHorarioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MedicoId
        {
            get
            {
                return _MedicoId;
            }
            set
            {
                OnMedicoIdChanging(value);
                ReportPropertyChanging("MedicoId");
                _MedicoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicoId");
                OnMedicoIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MedicoId;
        partial void OnMedicoIdChanging(Nullable<global::System.Int32> value);
        partial void OnMedicoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Observacoes
        {
            get
            {
                return _Observacoes;
            }
            set
            {
                OnObservacoesChanging(value);
                ReportPropertyChanging("Observacoes");
                _Observacoes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Observacoes");
                OnObservacoesChanged();
            }
        }
        private global::System.String _Observacoes;
        partial void OnObservacoesChanging(global::System.String value);
        partial void OnObservacoesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescricaoDoencaAtual
        {
            get
            {
                return _DescricaoDoencaAtual;
            }
            set
            {
                OnDescricaoDoencaAtualChanging(value);
                ReportPropertyChanging("DescricaoDoencaAtual");
                _DescricaoDoencaAtual = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescricaoDoencaAtual");
                OnDescricaoDoencaAtualChanged();
            }
        }
        private global::System.String _DescricaoDoencaAtual;
        partial void OnDescricaoDoencaAtualChanging(global::System.String value);
        partial void OnDescricaoDoencaAtualChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QueixaPrincipal
        {
            get
            {
                return _QueixaPrincipal;
            }
            set
            {
                OnQueixaPrincipalChanging(value);
                ReportPropertyChanging("QueixaPrincipal");
                _QueixaPrincipal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QueixaPrincipal");
                OnQueixaPrincipalChanged();
            }
        }
        private global::System.String _QueixaPrincipal;
        partial void OnQueixaPrincipalChanging(global::System.String value);
        partial void OnQueixaPrincipalChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERP.Medico.Model", "FK_Atendimento_Medico", "Medico")]
        public Medico Medico
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("ERP.Medico.Model.FK_Atendimento_Medico", "Medico").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("ERP.Medico.Model.FK_Atendimento_Medico", "Medico").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Medico> MedicoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("ERP.Medico.Model.FK_Atendimento_Medico", "Medico");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Medico>("ERP.Medico.Model.FK_Atendimento_Medico", "Medico", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERP.Medico.Model", "FK_Atendimento_Paciente", "Paciente")]
        public Paciente Paciente
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("ERP.Medico.Model.FK_Atendimento_Paciente", "Paciente").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("ERP.Medico.Model.FK_Atendimento_Paciente", "Paciente").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Paciente> PacienteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("ERP.Medico.Model.FK_Atendimento_Paciente", "Paciente");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Paciente>("ERP.Medico.Model.FK_Atendimento_Paciente", "Paciente", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERP.Medico.Model", "FK_Diagnostico_Atendimento", "Diagnostico")]
        public EntityCollection<Diagnostico> Diagnostico
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Diagnostico>("ERP.Medico.Model.FK_Diagnostico_Atendimento", "Diagnostico");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Diagnostico>("ERP.Medico.Model.FK_Diagnostico_Atendimento", "Diagnostico", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERP.Medico.Model", "FK_Exame_Atendimento", "Exame")]
        public EntityCollection<Exame> Exame
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Exame>("ERP.Medico.Model.FK_Exame_Atendimento", "Exame");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Exame>("ERP.Medico.Model.FK_Exame_Atendimento", "Exame", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERP.Medico.Model", "FK_Prescricao_Atendimento", "Prescricao")]
        public EntityCollection<Prescricao> Prescricao
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Prescricao>("ERP.Medico.Model.FK_Prescricao_Atendimento", "Prescricao");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Prescricao>("ERP.Medico.Model.FK_Prescricao_Atendimento", "Prescricao", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERP.Medico.Model", "FK_Tratamento_Atendimento", "Tratamento")]
        public EntityCollection<Tratamento> Tratamento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tratamento>("ERP.Medico.Model.FK_Tratamento_Atendimento", "Tratamento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tratamento>("ERP.Medico.Model.FK_Tratamento_Atendimento", "Tratamento", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERP.Medico.Model", Name="Diagnostico")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Diagnostico : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Diagnostico object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="atendimentoId">Initial value of the AtendimentoId property.</param>
        public static Diagnostico CreateDiagnostico(global::System.Int32 id, global::System.Int32 atendimentoId)
        {
            Diagnostico diagnostico = new Diagnostico();
            diagnostico.Id = id;
            diagnostico.AtendimentoId = atendimentoId;
            return diagnostico;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descricao
        {
            get
            {
                return _Descricao;
            }
            set
            {
                OnDescricaoChanging(value);
                ReportPropertyChanging("Descricao");
                _Descricao = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descricao");
                OnDescricaoChanged();
            }
        }
        private global::System.String _Descricao;
        partial void OnDescricaoChanging(global::System.String value);
        partial void OnDescricaoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Observacoes
        {
            get
            {
                return _Observacoes;
            }
            set
            {
                OnObservacoesChanging(value);
                ReportPropertyChanging("Observacoes");
                _Observacoes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Observacoes");
                OnObservacoesChanged();
            }
        }
        private global::System.String _Observacoes;
        partial void OnObservacoesChanging(global::System.String value);
        partial void OnObservacoesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AtendimentoId
        {
            get
            {
                return _AtendimentoId;
            }
            set
            {
                OnAtendimentoIdChanging(value);
                ReportPropertyChanging("AtendimentoId");
                _AtendimentoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AtendimentoId");
                OnAtendimentoIdChanged();
            }
        }
        private global::System.Int32 _AtendimentoId;
        partial void OnAtendimentoIdChanging(global::System.Int32 value);
        partial void OnAtendimentoIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERP.Medico.Model", "FK_Diagnostico_Atendimento", "Atendimento")]
        public Atendimento Atendimento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERP.Medico.Model.FK_Diagnostico_Atendimento", "Atendimento").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERP.Medico.Model.FK_Diagnostico_Atendimento", "Atendimento").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Atendimento> AtendimentoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERP.Medico.Model.FK_Diagnostico_Atendimento", "Atendimento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Atendimento>("ERP.Medico.Model.FK_Diagnostico_Atendimento", "Atendimento", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERP.Medico.Model", Name="Exame")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Exame : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Exame object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="atendimentoId">Initial value of the AtendimentoId property.</param>
        public static Exame CreateExame(global::System.Int32 id, global::System.Int32 atendimentoId)
        {
            Exame exame = new Exame();
            exame.Id = id;
            exame.AtendimentoId = atendimentoId;
            return exame;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descricao
        {
            get
            {
                return _Descricao;
            }
            set
            {
                OnDescricaoChanging(value);
                ReportPropertyChanging("Descricao");
                _Descricao = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descricao");
                OnDescricaoChanged();
            }
        }
        private global::System.String _Descricao;
        partial void OnDescricaoChanging(global::System.String value);
        partial void OnDescricaoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Observacoes
        {
            get
            {
                return _Observacoes;
            }
            set
            {
                OnObservacoesChanging(value);
                ReportPropertyChanging("Observacoes");
                _Observacoes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Observacoes");
                OnObservacoesChanged();
            }
        }
        private global::System.String _Observacoes;
        partial void OnObservacoesChanging(global::System.String value);
        partial void OnObservacoesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AtendimentoId
        {
            get
            {
                return _AtendimentoId;
            }
            set
            {
                OnAtendimentoIdChanging(value);
                ReportPropertyChanging("AtendimentoId");
                _AtendimentoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AtendimentoId");
                OnAtendimentoIdChanged();
            }
        }
        private global::System.Int32 _AtendimentoId;
        partial void OnAtendimentoIdChanging(global::System.Int32 value);
        partial void OnAtendimentoIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERP.Medico.Model", "FK_Exame_Atendimento", "Atendimento")]
        public Atendimento Atendimento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERP.Medico.Model.FK_Exame_Atendimento", "Atendimento").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERP.Medico.Model.FK_Exame_Atendimento", "Atendimento").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Atendimento> AtendimentoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERP.Medico.Model.FK_Exame_Atendimento", "Atendimento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Atendimento>("ERP.Medico.Model.FK_Exame_Atendimento", "Atendimento", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERP.Medico.Model", Name="Medico")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Medico : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Medico object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Medico CreateMedico(global::System.Int32 id)
        {
            Medico medico = new Medico();
            medico.Id = id;
            return medico;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nome
        {
            get
            {
                return _Nome;
            }
            set
            {
                OnNomeChanging(value);
                ReportPropertyChanging("Nome");
                _Nome = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nome");
                OnNomeChanged();
            }
        }
        private global::System.String _Nome;
        partial void OnNomeChanging(global::System.String value);
        partial void OnNomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Codigo
        {
            get
            {
                return _Codigo;
            }
            set
            {
                OnCodigoChanging(value);
                ReportPropertyChanging("Codigo");
                _Codigo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Codigo");
                OnCodigoChanged();
            }
        }
        private global::System.String _Codigo;
        partial void OnCodigoChanging(global::System.String value);
        partial void OnCodigoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERP.Medico.Model", "FK_Atendimento_Medico", "Atendimento")]
        public EntityCollection<Atendimento> Atendimento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Atendimento>("ERP.Medico.Model.FK_Atendimento_Medico", "Atendimento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Atendimento>("ERP.Medico.Model.FK_Atendimento_Medico", "Atendimento", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERP.Medico.Model", Name="Paciente")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Paciente : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Paciente object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Paciente CreatePaciente(global::System.Int32 id)
        {
            Paciente paciente = new Paciente();
            paciente.Id = id;
            return paciente;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TipoSangue
        {
            get
            {
                return _TipoSangue;
            }
            set
            {
                OnTipoSangueChanging(value);
                ReportPropertyChanging("TipoSangue");
                _TipoSangue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TipoSangue");
                OnTipoSangueChanged();
            }
        }
        private global::System.String _TipoSangue;
        partial void OnTipoSangueChanging(global::System.String value);
        partial void OnTipoSangueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HistoricoFamiliar
        {
            get
            {
                return _HistoricoFamiliar;
            }
            set
            {
                OnHistoricoFamiliarChanging(value);
                ReportPropertyChanging("HistoricoFamiliar");
                _HistoricoFamiliar = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HistoricoFamiliar");
                OnHistoricoFamiliarChanged();
            }
        }
        private global::System.String _HistoricoFamiliar;
        partial void OnHistoricoFamiliarChanging(global::System.String value);
        partial void OnHistoricoFamiliarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HistoricoPessoal
        {
            get
            {
                return _HistoricoPessoal;
            }
            set
            {
                OnHistoricoPessoalChanging(value);
                ReportPropertyChanging("HistoricoPessoal");
                _HistoricoPessoal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HistoricoPessoal");
                OnHistoricoPessoalChanged();
            }
        }
        private global::System.String _HistoricoPessoal;
        partial void OnHistoricoPessoalChanging(global::System.String value);
        partial void OnHistoricoPessoalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Observacoes
        {
            get
            {
                return _Observacoes;
            }
            set
            {
                OnObservacoesChanging(value);
                ReportPropertyChanging("Observacoes");
                _Observacoes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Observacoes");
                OnObservacoesChanged();
            }
        }
        private global::System.String _Observacoes;
        partial void OnObservacoesChanging(global::System.String value);
        partial void OnObservacoesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Codigo
        {
            get
            {
                return _Codigo;
            }
            set
            {
                OnCodigoChanging(value);
                ReportPropertyChanging("Codigo");
                _Codigo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Codigo");
                OnCodigoChanged();
            }
        }
        private global::System.String _Codigo;
        partial void OnCodigoChanging(global::System.String value);
        partial void OnCodigoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nome
        {
            get
            {
                return _Nome;
            }
            set
            {
                OnNomeChanging(value);
                ReportPropertyChanging("Nome");
                _Nome = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nome");
                OnNomeChanged();
            }
        }
        private global::System.String _Nome;
        partial void OnNomeChanging(global::System.String value);
        partial void OnNomeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERP.Medico.Model", "FK_Atendimento_Paciente", "Atendimento")]
        public EntityCollection<Atendimento> Atendimento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Atendimento>("ERP.Medico.Model.FK_Atendimento_Paciente", "Atendimento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Atendimento>("ERP.Medico.Model.FK_Atendimento_Paciente", "Atendimento", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERP.Medico.Model", Name="Prescricao")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Prescricao : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Prescricao object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="atendimentoId">Initial value of the AtendimentoId property.</param>
        public static Prescricao CreatePrescricao(global::System.Int32 id, global::System.Int32 atendimentoId)
        {
            Prescricao prescricao = new Prescricao();
            prescricao.Id = id;
            prescricao.AtendimentoId = atendimentoId;
            return prescricao;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descricao
        {
            get
            {
                return _Descricao;
            }
            set
            {
                OnDescricaoChanging(value);
                ReportPropertyChanging("Descricao");
                _Descricao = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descricao");
                OnDescricaoChanged();
            }
        }
        private global::System.String _Descricao;
        partial void OnDescricaoChanging(global::System.String value);
        partial void OnDescricaoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Observacoes
        {
            get
            {
                return _Observacoes;
            }
            set
            {
                OnObservacoesChanging(value);
                ReportPropertyChanging("Observacoes");
                _Observacoes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Observacoes");
                OnObservacoesChanged();
            }
        }
        private global::System.String _Observacoes;
        partial void OnObservacoesChanging(global::System.String value);
        partial void OnObservacoesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AtendimentoId
        {
            get
            {
                return _AtendimentoId;
            }
            set
            {
                OnAtendimentoIdChanging(value);
                ReportPropertyChanging("AtendimentoId");
                _AtendimentoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AtendimentoId");
                OnAtendimentoIdChanged();
            }
        }
        private global::System.Int32 _AtendimentoId;
        partial void OnAtendimentoIdChanging(global::System.Int32 value);
        partial void OnAtendimentoIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERP.Medico.Model", "FK_Prescricao_Atendimento", "Atendimento")]
        public Atendimento Atendimento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERP.Medico.Model.FK_Prescricao_Atendimento", "Atendimento").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERP.Medico.Model.FK_Prescricao_Atendimento", "Atendimento").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Atendimento> AtendimentoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERP.Medico.Model.FK_Prescricao_Atendimento", "Atendimento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Atendimento>("ERP.Medico.Model.FK_Prescricao_Atendimento", "Atendimento", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERP.Medico.Model", Name="Tratamento")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tratamento : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tratamento object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="atendimentoId">Initial value of the AtendimentoId property.</param>
        public static Tratamento CreateTratamento(global::System.Int32 id, global::System.Int32 atendimentoId)
        {
            Tratamento tratamento = new Tratamento();
            tratamento.Id = id;
            tratamento.AtendimentoId = atendimentoId;
            return tratamento;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descricao
        {
            get
            {
                return _Descricao;
            }
            set
            {
                OnDescricaoChanging(value);
                ReportPropertyChanging("Descricao");
                _Descricao = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descricao");
                OnDescricaoChanged();
            }
        }
        private global::System.String _Descricao;
        partial void OnDescricaoChanging(global::System.String value);
        partial void OnDescricaoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Observacoes
        {
            get
            {
                return _Observacoes;
            }
            set
            {
                OnObservacoesChanging(value);
                ReportPropertyChanging("Observacoes");
                _Observacoes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Observacoes");
                OnObservacoesChanged();
            }
        }
        private global::System.String _Observacoes;
        partial void OnObservacoesChanging(global::System.String value);
        partial void OnObservacoesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AtendimentoId
        {
            get
            {
                return _AtendimentoId;
            }
            set
            {
                OnAtendimentoIdChanging(value);
                ReportPropertyChanging("AtendimentoId");
                _AtendimentoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AtendimentoId");
                OnAtendimentoIdChanged();
            }
        }
        private global::System.Int32 _AtendimentoId;
        partial void OnAtendimentoIdChanging(global::System.Int32 value);
        partial void OnAtendimentoIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERP.Medico.Model", "FK_Tratamento_Atendimento", "Atendimento")]
        public Atendimento Atendimento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERP.Medico.Model.FK_Tratamento_Atendimento", "Atendimento").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERP.Medico.Model.FK_Tratamento_Atendimento", "Atendimento").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Atendimento> AtendimentoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERP.Medico.Model.FK_Tratamento_Atendimento", "Atendimento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Atendimento>("ERP.Medico.Model.FK_Tratamento_Atendimento", "Atendimento", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
