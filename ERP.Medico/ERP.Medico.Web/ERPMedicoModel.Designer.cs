//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ERPModel", "FK_AnamneseTipoSangue", "TiposSangue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Erp.Medico.Web.TiposSangue), "Anamneses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Erp.Medico.Web.Anamnese), true)]
[assembly: EdmRelationshipAttribute("ERPModel", "FK_PacienteAnamnese", "Anamneses", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Erp.Medico.Web.Anamnese), "Pacientes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Erp.Medico.Web.Paciente), true)]
[assembly: EdmRelationshipAttribute("ERPModel", "FK_AtendimentoDiagnostico", "Atendimentos", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Erp.Medico.Web.Atendimento), "Diagnosticos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Erp.Medico.Web.Diagnostico), true)]
[assembly: EdmRelationshipAttribute("ERPModel", "FK_AtendimentoMedico", "Medicos", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Erp.Medico.Web.Medico), "Atendimentos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Erp.Medico.Web.Atendimento), true)]
[assembly: EdmRelationshipAttribute("ERPModel", "FK_AtendimentoPaciente", "Pacientes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Erp.Medico.Web.Paciente), "Atendimentos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Erp.Medico.Web.Atendimento), true)]
[assembly: EdmRelationshipAttribute("ERPModel", "FK_AtendimentoTipoAtendimento", "TiposAtendimento", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Erp.Medico.Web.TiposAtendimento), "Atendimentos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Erp.Medico.Web.Atendimento), true)]
[assembly: EdmRelationshipAttribute("ERPModel", "FK_AtendimentoTratamento", "Atendimentos", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Erp.Medico.Web.Atendimento), "Tratamentos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Erp.Medico.Web.Tratamento), true)]

#endregion

namespace Erp.Medico.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Anamnese> Anamneses
        {
            get
            {
                if ((_Anamneses == null))
                {
                    _Anamneses = base.CreateObjectSet<Anamnese>("Anamneses");
                }
                return _Anamneses;
            }
        }
        private ObjectSet<Anamnese> _Anamneses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Atendimento> Atendimentos
        {
            get
            {
                if ((_Atendimentos == null))
                {
                    _Atendimentos = base.CreateObjectSet<Atendimento>("Atendimentos");
                }
                return _Atendimentos;
            }
        }
        private ObjectSet<Atendimento> _Atendimentos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Diagnostico> Diagnosticos
        {
            get
            {
                if ((_Diagnosticos == null))
                {
                    _Diagnosticos = base.CreateObjectSet<Diagnostico>("Diagnosticos");
                }
                return _Diagnosticos;
            }
        }
        private ObjectSet<Diagnostico> _Diagnosticos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Medico> Medicos
        {
            get
            {
                if ((_Medicos == null))
                {
                    _Medicos = base.CreateObjectSet<Medico>("Medicos");
                }
                return _Medicos;
            }
        }
        private ObjectSet<Medico> _Medicos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Paciente> Pacientes
        {
            get
            {
                if ((_Pacientes == null))
                {
                    _Pacientes = base.CreateObjectSet<Paciente>("Pacientes");
                }
                return _Pacientes;
            }
        }
        private ObjectSet<Paciente> _Pacientes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TiposAtendimento> TiposAtendimentos
        {
            get
            {
                if ((_TiposAtendimentos == null))
                {
                    _TiposAtendimentos = base.CreateObjectSet<TiposAtendimento>("TiposAtendimentos");
                }
                return _TiposAtendimentos;
            }
        }
        private ObjectSet<TiposAtendimento> _TiposAtendimentos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TiposSangue> TiposSangues
        {
            get
            {
                if ((_TiposSangues == null))
                {
                    _TiposSangues = base.CreateObjectSet<TiposSangue>("TiposSangues");
                }
                return _TiposSangues;
            }
        }
        private ObjectSet<TiposSangue> _TiposSangues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tratamento> Tratamentos
        {
            get
            {
                if ((_Tratamentos == null))
                {
                    _Tratamentos = base.CreateObjectSet<Tratamento>("Tratamentos");
                }
                return _Tratamentos;
            }
        }
        private ObjectSet<Tratamento> _Tratamentos;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Anamneses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAnamneses(Anamnese anamnese)
        {
            base.AddObject("Anamneses", anamnese);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Atendimentos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAtendimentos(Atendimento atendimento)
        {
            base.AddObject("Atendimentos", atendimento);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Diagnosticos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDiagnosticos(Diagnostico diagnostico)
        {
            base.AddObject("Diagnosticos", diagnostico);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Medicos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicos(Medico medico)
        {
            base.AddObject("Medicos", medico);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pacientes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPacientes(Paciente paciente)
        {
            base.AddObject("Pacientes", paciente);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TiposAtendimentos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTiposAtendimentos(TiposAtendimento tiposAtendimento)
        {
            base.AddObject("TiposAtendimentos", tiposAtendimento);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TiposSangues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTiposSangues(TiposSangue tiposSangue)
        {
            base.AddObject("TiposSangues", tiposSangue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tratamentos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTratamentos(Tratamento tratamento)
        {
            base.AddObject("Tratamentos", tratamento);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="Anamnese")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Anamnese : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Anamnese object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="tipoSangue_Id">Initial value of the TipoSangue_Id property.</param>
        public static Anamnese CreateAnamnese(global::System.Int32 id, global::System.Int32 tipoSangue_Id)
        {
            Anamnese anamnese = new Anamnese();
            anamnese.Id = id;
            anamnese.TipoSangue_Id = tipoSangue_Id;
            return anamnese;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescricaoDoencaAtual
        {
            get
            {
                return _DescricaoDoencaAtual;
            }
            set
            {
                OnDescricaoDoencaAtualChanging(value);
                ReportPropertyChanging("DescricaoDoencaAtual");
                _DescricaoDoencaAtual = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescricaoDoencaAtual");
                OnDescricaoDoencaAtualChanged();
            }
        }
        private global::System.String _DescricaoDoencaAtual;
        partial void OnDescricaoDoencaAtualChanging(global::System.String value);
        partial void OnDescricaoDoencaAtualChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescricaoMedicaPregressa
        {
            get
            {
                return _DescricaoMedicaPregressa;
            }
            set
            {
                OnDescricaoMedicaPregressaChanging(value);
                ReportPropertyChanging("DescricaoMedicaPregressa");
                _DescricaoMedicaPregressa = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescricaoMedicaPregressa");
                OnDescricaoMedicaPregressaChanged();
            }
        }
        private global::System.String _DescricaoMedicaPregressa;
        partial void OnDescricaoMedicaPregressaChanging(global::System.String value);
        partial void OnDescricaoMedicaPregressaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HistoricoFamiliar
        {
            get
            {
                return _HistoricoFamiliar;
            }
            set
            {
                OnHistoricoFamiliarChanging(value);
                ReportPropertyChanging("HistoricoFamiliar");
                _HistoricoFamiliar = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HistoricoFamiliar");
                OnHistoricoFamiliarChanged();
            }
        }
        private global::System.String _HistoricoFamiliar;
        partial void OnHistoricoFamiliarChanging(global::System.String value);
        partial void OnHistoricoFamiliarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HistoricoPessoalSocial
        {
            get
            {
                return _HistoricoPessoalSocial;
            }
            set
            {
                OnHistoricoPessoalSocialChanging(value);
                ReportPropertyChanging("HistoricoPessoalSocial");
                _HistoricoPessoalSocial = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HistoricoPessoalSocial");
                OnHistoricoPessoalSocialChanged();
            }
        }
        private global::System.String _HistoricoPessoalSocial;
        partial void OnHistoricoPessoalSocialChanging(global::System.String value);
        partial void OnHistoricoPessoalSocialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Observacoes
        {
            get
            {
                return _Observacoes;
            }
            set
            {
                OnObservacoesChanging(value);
                ReportPropertyChanging("Observacoes");
                _Observacoes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Observacoes");
                OnObservacoesChanged();
            }
        }
        private global::System.String _Observacoes;
        partial void OnObservacoesChanging(global::System.String value);
        partial void OnObservacoesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QueixaPrincipal
        {
            get
            {
                return _QueixaPrincipal;
            }
            set
            {
                OnQueixaPrincipalChanging(value);
                ReportPropertyChanging("QueixaPrincipal");
                _QueixaPrincipal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QueixaPrincipal");
                OnQueixaPrincipalChanged();
            }
        }
        private global::System.String _QueixaPrincipal;
        partial void OnQueixaPrincipalChanging(global::System.String value);
        partial void OnQueixaPrincipalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TipoSangue_Id
        {
            get
            {
                return _TipoSangue_Id;
            }
            set
            {
                OnTipoSangue_IdChanging(value);
                ReportPropertyChanging("TipoSangue_Id");
                _TipoSangue_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TipoSangue_Id");
                OnTipoSangue_IdChanged();
            }
        }
        private global::System.Int32 _TipoSangue_Id;
        partial void OnTipoSangue_IdChanging(global::System.Int32 value);
        partial void OnTipoSangue_IdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_AnamneseTipoSangue", "TiposSangue")]
        public TiposSangue TiposSangue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TiposSangue>("ERPModel.FK_AnamneseTipoSangue", "TiposSangue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TiposSangue>("ERPModel.FK_AnamneseTipoSangue", "TiposSangue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TiposSangue> TiposSangueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TiposSangue>("ERPModel.FK_AnamneseTipoSangue", "TiposSangue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TiposSangue>("ERPModel.FK_AnamneseTipoSangue", "TiposSangue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_PacienteAnamnese", "Pacientes")]
        public EntityCollection<Paciente> Pacientes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Paciente>("ERPModel.FK_PacienteAnamnese", "Pacientes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Paciente>("ERPModel.FK_PacienteAnamnese", "Pacientes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="Atendimento")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Atendimento : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Atendimento object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="descricao">Initial value of the Descricao property.</param>
        /// <param name="emergencia">Initial value of the Emergencia property.</param>
        /// <param name="horario">Initial value of the Horario property.</param>
        /// <param name="tipoAtendimento_Id">Initial value of the TipoAtendimento_Id property.</param>
        /// <param name="paciente_Id">Initial value of the Paciente_Id property.</param>
        /// <param name="medico_Id">Initial value of the Medico_Id property.</param>
        public static Atendimento CreateAtendimento(global::System.Int32 id, global::System.String descricao, global::System.Boolean emergencia, global::System.DateTime horario, global::System.Int32 tipoAtendimento_Id, global::System.Int32 paciente_Id, global::System.Int32 medico_Id)
        {
            Atendimento atendimento = new Atendimento();
            atendimento.Id = id;
            atendimento.Descricao = descricao;
            atendimento.Emergencia = emergencia;
            atendimento.Horario = horario;
            atendimento.TipoAtendimento_Id = tipoAtendimento_Id;
            atendimento.Paciente_Id = paciente_Id;
            atendimento.Medico_Id = medico_Id;
            return atendimento;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Descricao
        {
            get
            {
                return _Descricao;
            }
            set
            {
                OnDescricaoChanging(value);
                ReportPropertyChanging("Descricao");
                _Descricao = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Descricao");
                OnDescricaoChanged();
            }
        }
        private global::System.String _Descricao;
        partial void OnDescricaoChanging(global::System.String value);
        partial void OnDescricaoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Emergencia
        {
            get
            {
                return _Emergencia;
            }
            set
            {
                OnEmergenciaChanging(value);
                ReportPropertyChanging("Emergencia");
                _Emergencia = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Emergencia");
                OnEmergenciaChanged();
            }
        }
        private global::System.Boolean _Emergencia;
        partial void OnEmergenciaChanging(global::System.Boolean value);
        partial void OnEmergenciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Horario
        {
            get
            {
                return _Horario;
            }
            set
            {
                OnHorarioChanging(value);
                ReportPropertyChanging("Horario");
                _Horario = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Horario");
                OnHorarioChanged();
            }
        }
        private global::System.DateTime _Horario;
        partial void OnHorarioChanging(global::System.DateTime value);
        partial void OnHorarioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TipoAtendimento_Id
        {
            get
            {
                return _TipoAtendimento_Id;
            }
            set
            {
                OnTipoAtendimento_IdChanging(value);
                ReportPropertyChanging("TipoAtendimento_Id");
                _TipoAtendimento_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TipoAtendimento_Id");
                OnTipoAtendimento_IdChanged();
            }
        }
        private global::System.Int32 _TipoAtendimento_Id;
        partial void OnTipoAtendimento_IdChanging(global::System.Int32 value);
        partial void OnTipoAtendimento_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Paciente_Id
        {
            get
            {
                return _Paciente_Id;
            }
            set
            {
                OnPaciente_IdChanging(value);
                ReportPropertyChanging("Paciente_Id");
                _Paciente_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Paciente_Id");
                OnPaciente_IdChanged();
            }
        }
        private global::System.Int32 _Paciente_Id;
        partial void OnPaciente_IdChanging(global::System.Int32 value);
        partial void OnPaciente_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Medico_Id
        {
            get
            {
                return _Medico_Id;
            }
            set
            {
                OnMedico_IdChanging(value);
                ReportPropertyChanging("Medico_Id");
                _Medico_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Medico_Id");
                OnMedico_IdChanged();
            }
        }
        private global::System.Int32 _Medico_Id;
        partial void OnMedico_IdChanging(global::System.Int32 value);
        partial void OnMedico_IdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_AtendimentoDiagnostico", "Diagnosticos")]
        public EntityCollection<Diagnostico> Diagnosticos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Diagnostico>("ERPModel.FK_AtendimentoDiagnostico", "Diagnosticos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Diagnostico>("ERPModel.FK_AtendimentoDiagnostico", "Diagnosticos", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_AtendimentoMedico", "Medicos")]
        public Medico Medico
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("ERPModel.FK_AtendimentoMedico", "Medicos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("ERPModel.FK_AtendimentoMedico", "Medicos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Medico> MedicoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("ERPModel.FK_AtendimentoMedico", "Medicos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Medico>("ERPModel.FK_AtendimentoMedico", "Medicos", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_AtendimentoPaciente", "Pacientes")]
        public Paciente Paciente
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("ERPModel.FK_AtendimentoPaciente", "Pacientes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("ERPModel.FK_AtendimentoPaciente", "Pacientes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Paciente> PacienteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("ERPModel.FK_AtendimentoPaciente", "Pacientes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Paciente>("ERPModel.FK_AtendimentoPaciente", "Pacientes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_AtendimentoTipoAtendimento", "TiposAtendimento")]
        public TiposAtendimento TiposAtendimento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TiposAtendimento>("ERPModel.FK_AtendimentoTipoAtendimento", "TiposAtendimento").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TiposAtendimento>("ERPModel.FK_AtendimentoTipoAtendimento", "TiposAtendimento").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TiposAtendimento> TiposAtendimentoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TiposAtendimento>("ERPModel.FK_AtendimentoTipoAtendimento", "TiposAtendimento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TiposAtendimento>("ERPModel.FK_AtendimentoTipoAtendimento", "TiposAtendimento", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_AtendimentoTratamento", "Tratamentos")]
        public EntityCollection<Tratamento> Tratamentos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tratamento>("ERPModel.FK_AtendimentoTratamento", "Tratamentos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tratamento>("ERPModel.FK_AtendimentoTratamento", "Tratamentos", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="Diagnostico")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Diagnostico : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Diagnostico object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="descricao">Initial value of the Descricao property.</param>
        /// <param name="observacoes">Initial value of the Observacoes property.</param>
        /// <param name="atendimentoId">Initial value of the AtendimentoId property.</param>
        public static Diagnostico CreateDiagnostico(global::System.Int32 id, global::System.String descricao, global::System.String observacoes, global::System.Int32 atendimentoId)
        {
            Diagnostico diagnostico = new Diagnostico();
            diagnostico.Id = id;
            diagnostico.Descricao = descricao;
            diagnostico.Observacoes = observacoes;
            diagnostico.AtendimentoId = atendimentoId;
            return diagnostico;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Descricao
        {
            get
            {
                return _Descricao;
            }
            set
            {
                OnDescricaoChanging(value);
                ReportPropertyChanging("Descricao");
                _Descricao = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Descricao");
                OnDescricaoChanged();
            }
        }
        private global::System.String _Descricao;
        partial void OnDescricaoChanging(global::System.String value);
        partial void OnDescricaoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Observacoes
        {
            get
            {
                return _Observacoes;
            }
            set
            {
                OnObservacoesChanging(value);
                ReportPropertyChanging("Observacoes");
                _Observacoes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Observacoes");
                OnObservacoesChanged();
            }
        }
        private global::System.String _Observacoes;
        partial void OnObservacoesChanging(global::System.String value);
        partial void OnObservacoesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AtendimentoId
        {
            get
            {
                return _AtendimentoId;
            }
            set
            {
                OnAtendimentoIdChanging(value);
                ReportPropertyChanging("AtendimentoId");
                _AtendimentoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AtendimentoId");
                OnAtendimentoIdChanged();
            }
        }
        private global::System.Int32 _AtendimentoId;
        partial void OnAtendimentoIdChanging(global::System.Int32 value);
        partial void OnAtendimentoIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_AtendimentoDiagnostico", "Atendimentos")]
        public Atendimento Atendimento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERPModel.FK_AtendimentoDiagnostico", "Atendimentos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERPModel.FK_AtendimentoDiagnostico", "Atendimentos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Atendimento> AtendimentoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERPModel.FK_AtendimentoDiagnostico", "Atendimentos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Atendimento>("ERPModel.FK_AtendimentoDiagnostico", "Atendimentos", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="Medico")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Medico : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Medico object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nome">Initial value of the Nome property.</param>
        public static Medico CreateMedico(global::System.Int32 id, global::System.String nome)
        {
            Medico medico = new Medico();
            medico.Id = id;
            medico.Nome = nome;
            return medico;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nome
        {
            get
            {
                return _Nome;
            }
            set
            {
                OnNomeChanging(value);
                ReportPropertyChanging("Nome");
                _Nome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nome");
                OnNomeChanged();
            }
        }
        private global::System.String _Nome;
        partial void OnNomeChanging(global::System.String value);
        partial void OnNomeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_AtendimentoMedico", "Atendimentos")]
        public EntityCollection<Atendimento> Atendimentos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Atendimento>("ERPModel.FK_AtendimentoMedico", "Atendimentos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Atendimento>("ERPModel.FK_AtendimentoMedico", "Atendimentos", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="Paciente")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Paciente : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Paciente object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="altura">Initial value of the Altura property.</param>
        /// <param name="peso">Initial value of the Peso property.</param>
        /// <param name="codigo">Initial value of the Codigo property.</param>
        /// <param name="anamnese_Id">Initial value of the Anamnese_Id property.</param>
        public static Paciente CreatePaciente(global::System.Int32 id, global::System.Single altura, global::System.Single peso, global::System.String codigo, global::System.Int32 anamnese_Id)
        {
            Paciente paciente = new Paciente();
            paciente.Id = id;
            paciente.Altura = altura;
            paciente.Peso = peso;
            paciente.Codigo = codigo;
            paciente.Anamnese_Id = anamnese_Id;
            return paciente;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Altura
        {
            get
            {
                return _Altura;
            }
            set
            {
                OnAlturaChanging(value);
                ReportPropertyChanging("Altura");
                _Altura = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Altura");
                OnAlturaChanged();
            }
        }
        private global::System.Single _Altura;
        partial void OnAlturaChanging(global::System.Single value);
        partial void OnAlturaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Peso
        {
            get
            {
                return _Peso;
            }
            set
            {
                OnPesoChanging(value);
                ReportPropertyChanging("Peso");
                _Peso = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Peso");
                OnPesoChanged();
            }
        }
        private global::System.Single _Peso;
        partial void OnPesoChanging(global::System.Single value);
        partial void OnPesoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Codigo
        {
            get
            {
                return _Codigo;
            }
            set
            {
                OnCodigoChanging(value);
                ReportPropertyChanging("Codigo");
                _Codigo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Codigo");
                OnCodigoChanged();
            }
        }
        private global::System.String _Codigo;
        partial void OnCodigoChanging(global::System.String value);
        partial void OnCodigoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Anamnese_Id
        {
            get
            {
                return _Anamnese_Id;
            }
            set
            {
                OnAnamnese_IdChanging(value);
                ReportPropertyChanging("Anamnese_Id");
                _Anamnese_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Anamnese_Id");
                OnAnamnese_IdChanged();
            }
        }
        private global::System.Int32 _Anamnese_Id;
        partial void OnAnamnese_IdChanging(global::System.Int32 value);
        partial void OnAnamnese_IdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_PacienteAnamnese", "Anamneses")]
        public Anamnese Anamnese
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Anamnese>("ERPModel.FK_PacienteAnamnese", "Anamneses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Anamnese>("ERPModel.FK_PacienteAnamnese", "Anamneses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Anamnese> AnamneseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Anamnese>("ERPModel.FK_PacienteAnamnese", "Anamneses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Anamnese>("ERPModel.FK_PacienteAnamnese", "Anamneses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_AtendimentoPaciente", "Atendimentos")]
        public EntityCollection<Atendimento> Atendimentos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Atendimento>("ERPModel.FK_AtendimentoPaciente", "Atendimentos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Atendimento>("ERPModel.FK_AtendimentoPaciente", "Atendimentos", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="TiposAtendimento")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TiposAtendimento : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TiposAtendimento object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="descricao">Initial value of the Descricao property.</param>
        public static TiposAtendimento CreateTiposAtendimento(global::System.Int32 id, global::System.String descricao)
        {
            TiposAtendimento tiposAtendimento = new TiposAtendimento();
            tiposAtendimento.Id = id;
            tiposAtendimento.Descricao = descricao;
            return tiposAtendimento;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Descricao
        {
            get
            {
                return _Descricao;
            }
            set
            {
                OnDescricaoChanging(value);
                ReportPropertyChanging("Descricao");
                _Descricao = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Descricao");
                OnDescricaoChanged();
            }
        }
        private global::System.String _Descricao;
        partial void OnDescricaoChanging(global::System.String value);
        partial void OnDescricaoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_AtendimentoTipoAtendimento", "Atendimentos")]
        public EntityCollection<Atendimento> Atendimentos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Atendimento>("ERPModel.FK_AtendimentoTipoAtendimento", "Atendimentos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Atendimento>("ERPModel.FK_AtendimentoTipoAtendimento", "Atendimentos", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="TiposSangue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TiposSangue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TiposSangue object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="descricao">Initial value of the Descricao property.</param>
        public static TiposSangue CreateTiposSangue(global::System.Int32 id, global::System.String descricao)
        {
            TiposSangue tiposSangue = new TiposSangue();
            tiposSangue.Id = id;
            tiposSangue.Descricao = descricao;
            return tiposSangue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Descricao
        {
            get
            {
                return _Descricao;
            }
            set
            {
                OnDescricaoChanging(value);
                ReportPropertyChanging("Descricao");
                _Descricao = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Descricao");
                OnDescricaoChanged();
            }
        }
        private global::System.String _Descricao;
        partial void OnDescricaoChanging(global::System.String value);
        partial void OnDescricaoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_AnamneseTipoSangue", "Anamneses")]
        public EntityCollection<Anamnese> Anamneses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Anamnese>("ERPModel.FK_AnamneseTipoSangue", "Anamneses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Anamnese>("ERPModel.FK_AnamneseTipoSangue", "Anamneses", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ERPModel", Name="Tratamento")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tratamento : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tratamento object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="descricao">Initial value of the Descricao property.</param>
        /// <param name="observacoes">Initial value of the Observacoes property.</param>
        /// <param name="atendimentoId">Initial value of the AtendimentoId property.</param>
        public static Tratamento CreateTratamento(global::System.Int32 id, global::System.String descricao, global::System.String observacoes, global::System.Int32 atendimentoId)
        {
            Tratamento tratamento = new Tratamento();
            tratamento.Id = id;
            tratamento.Descricao = descricao;
            tratamento.Observacoes = observacoes;
            tratamento.AtendimentoId = atendimentoId;
            return tratamento;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Descricao
        {
            get
            {
                return _Descricao;
            }
            set
            {
                OnDescricaoChanging(value);
                ReportPropertyChanging("Descricao");
                _Descricao = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Descricao");
                OnDescricaoChanged();
            }
        }
        private global::System.String _Descricao;
        partial void OnDescricaoChanging(global::System.String value);
        partial void OnDescricaoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Observacoes
        {
            get
            {
                return _Observacoes;
            }
            set
            {
                OnObservacoesChanging(value);
                ReportPropertyChanging("Observacoes");
                _Observacoes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Observacoes");
                OnObservacoesChanged();
            }
        }
        private global::System.String _Observacoes;
        partial void OnObservacoesChanging(global::System.String value);
        partial void OnObservacoesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AtendimentoId
        {
            get
            {
                return _AtendimentoId;
            }
            set
            {
                OnAtendimentoIdChanging(value);
                ReportPropertyChanging("AtendimentoId");
                _AtendimentoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AtendimentoId");
                OnAtendimentoIdChanged();
            }
        }
        private global::System.Int32 _AtendimentoId;
        partial void OnAtendimentoIdChanging(global::System.Int32 value);
        partial void OnAtendimentoIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ERPModel", "FK_AtendimentoTratamento", "Atendimentos")]
        public Atendimento Atendimento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERPModel.FK_AtendimentoTratamento", "Atendimentos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERPModel.FK_AtendimentoTratamento", "Atendimentos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Atendimento> AtendimentoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Atendimento>("ERPModel.FK_AtendimentoTratamento", "Atendimentos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Atendimento>("ERPModel.FK_AtendimentoTratamento", "Atendimentos", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
